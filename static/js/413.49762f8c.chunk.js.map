{"version":3,"file":"static/js/413.49762f8c.chunk.js","mappings":"8OAIO,MAAMA,EAAcC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gUAaxBC,GAAoBJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAYM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2FAOhCI,GAAgBP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAaS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0NAY7BO,GAAgBV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAoBY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wKAUpCU,EAAgBb,EAAAA,EAAOc,MAAKC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,mGAO5Ba,EAAuBhB,EAAAA,EAAOiB,OAAMC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,gO,2CC5CjD,MAAMgB,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaI,MAAM,IAC1BC,SAAUL,EAAAA,KAAaM,IAAI,GAAGH,aAGnBI,EAAeA,KAC1B,MAAMC,GAAcC,EAAAA,EAAAA,kBACdC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,aAAYC,EAAAA,GAAU,CACrCC,UAAWC,UACPN,GAASO,EAAAA,EAAAA,OACTC,QAAQC,IAAI,sCAAuCC,SAC7Cd,EAAYe,kBAAkB,QACpCH,QAAQC,IAAI,2BACZX,EAAS,SAAS,EAEtBc,QAAUC,IACRL,QAAQK,MAAM,qBAAsBA,EAAM,IAS9C,OACEC,EAAAA,EAAAA,KAAC/C,EAAW,CAAAgD,UACVD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CAAEzB,MAAO,GAAIC,SAAU,GAAIH,KAAM,IAChD4B,SATeC,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EACzCnB,EAASqB,OAAOH,GAChBE,GAAW,EAQPE,iBAAkBrC,EAAO4B,UAEzBU,EAAAA,EAAAA,MAACrD,EAAiB,CAACsD,aAAa,MAAKX,SAAA,EACnCD,EAAAA,EAAAA,KAACjC,EAAa,CAAC8C,QAAQ,QAAOZ,SAAC,YAC/BD,EAAAA,EAAAA,KAACvC,EAAa,CACZqD,KAAK,QACLtC,KAAK,QACLuC,YAAY,4BACZtC,UAAQ,KAEVuB,EAAAA,EAAAA,KAACpC,EAAa,CAACY,KAAK,QAAQwC,UAAU,SAEtChB,EAAAA,EAAAA,KAACjC,EAAa,CAAC8C,QAAQ,WAAUZ,SAAC,cAClCD,EAAAA,EAAAA,KAACvC,EAAa,CACZqD,KAAK,WACLtC,KAAK,WACLuC,YAAY,8BACZtC,UAAQ,KAEVuB,EAAAA,EAAAA,KAACpC,EAAa,CAACY,KAAK,WAAWwC,UAAU,SAEzChB,EAAAA,EAAAA,KAACjC,EAAa,CAAC8C,QAAQ,OAAMZ,SAAC,UAC9BD,EAAAA,EAAAA,KAACvC,EAAa,CACZqD,KAAK,OACLtC,KAAK,OACLuC,YAAY,0BACZtC,UAAQ,KAEVuB,EAAAA,EAAAA,KAACpC,EAAa,CAACY,KAAK,OAAOwC,UAAU,SACrChB,EAAAA,EAAAA,KAAC9B,EAAoB,CAAC4C,KAAK,SAAQb,SAAC,mBAG5B,ECxEH,SAASgB,IACtB,OACEN,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACED,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAAAjB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,oBAETD,EAAAA,EAAAA,KAACnB,EAAY,MAGnB,C","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/Registration.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\n\nexport const Fromwrapper = styled.div`\nmargin-top: 35px;\nmargin-left: auto;\nmargin-right: auto;\nbackground-color: black;\nwidth: 475px;\nheight: 500px;\nborder: 1px solid black;\nboder-radius: 20px;\nbackground: rgb(8,8,17);\nbackground: linear-gradient(90deg, rgba(8,8,17,1) 0%, rgba(4,8,3,1) 0%, rgba(39,107,39,1) 28%, rgba(29,29,31,1) 100%);\n`;\n\nexport const FormRegisterWrapp = styled(Form)`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    \n`;\n\nexport const InputRegister = styled(Field)`\n    font-size: 16px;\n    width: 300px;\n    height: 30px;\n    margin-bottom: 15px;\n    padding: 5px;\n    border-radius: 5px;\n    outline-color: #34c734;\n    border-color: black;\n    font-weight: 700;\n`;\n\nexport const ErrorRegister = styled(ErrorMessage)`\n    display: flex;\n    width: 300px;\n    text-align: center;\n    color: red;\n    margin-bottom: 15px;\n    font-weight: 500;\n    font-size: 16px;      \n`;\n\nexport const LabelRegister = styled.label`\n    font-size: 24px;\n    font-weight: 500;\n    margin-bottom: 5px;\n    color: white;\n`;\n\nexport const SubmitButtonRegister = styled.button`\n    width: 150px;\n    height: 40px;\n    background-color: #34c734;\n    border: none;\n    border-radius: 5px;\n    font-size: 16px;\n    font-weight: 700;\n    cursor: pointer;\n    outline-color: #34c734;\n    `;","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useNavigate } from 'react-router-dom'; \nimport { FormRegisterWrapp, InputRegister, ErrorRegister, LabelRegister, SubmitButtonRegister, Fromwrapper } from './RegistrationForm.styled';\nimport { register } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { registerSuccess } from '../../redux/auth/authSlice';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email(''),\n  password: yup.string().min(6).required(),\n});\n\nexport const RegisterForm = () => {\n  const queryClient = useQueryClient();\n  const navigate = useNavigate(); \n  const dispatch = useDispatch();\n\n  const mutation = useMutation(register, {\n    onSuccess: async (data) => {\n        dispatch(registerSuccess());\n        console.log('RegisterForm.jsx - Login successful', data);\n        await queryClient.invalidateQueries('user');\n        console.log('Navigating to /games...');\n        navigate('/games'); \n    },\n    onError: (error) => {\n      console.error('Registration error', error);\n    },\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    mutation.mutate(values);\n    resetForm();\n  };\n\n  return (\n    <Fromwrapper>\n      <Formik\n        initialValues={{ email: '', password: '', name: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormRegisterWrapp autoComplete='off'>\n          <LabelRegister htmlFor='email'>E-mail</LabelRegister>\n          <InputRegister\n            type=\"email\"\n            name=\"email\"\n            placeholder='Please, enter your E-mail'\n            required\n          />\n          <ErrorRegister name=\"email\" component='div' />\n\n          <LabelRegister htmlFor='password'>Password</LabelRegister>\n          <InputRegister\n            type=\"password\"\n            name=\"password\"\n            placeholder='Please, enter your Password'\n            required\n          />\n          <ErrorRegister name=\"password\" component='div' />\n\n          <LabelRegister htmlFor='name'>Name</LabelRegister>\n          <InputRegister\n            type=\"name\"\n            name=\"name\"\n            placeholder='Please, enter your Name'\n            required\n          />\n          <ErrorRegister name=\"name\" component='div' />\n          <SubmitButtonRegister type='submit'>Register</SubmitButtonRegister>\n        </FormRegisterWrapp>\n      </Formik>\n    </Fromwrapper>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../components/RegistrationForm/RegistrationForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["Fromwrapper","styled","div","_templateObject","_taggedTemplateLiteral","FormRegisterWrapp","Form","_templateObject2","InputRegister","Field","_templateObject3","ErrorRegister","ErrorMessage","_templateObject4","LabelRegister","label","_templateObject5","SubmitButtonRegister","button","_templateObject6","schema","yup","shape","name","required","email","password","min","RegisterForm","queryClient","useQueryClient","navigate","useNavigate","dispatch","useDispatch","mutation","useMutation","register","onSuccess","async","registerSuccess","console","log","data","invalidateQueries","onError","error","_jsx","children","Formik","initialValues","onSubmit","handleSubmit","values","_ref","resetForm","mutate","validationSchema","_jsxs","autoComplete","htmlFor","type","placeholder","component","Register","Helmet"],"sourceRoot":""}