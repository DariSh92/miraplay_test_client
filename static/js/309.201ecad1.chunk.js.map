{"version":3,"file":"static/js/309.201ecad1.chunk.js","mappings":"wPAIO,MAAMA,EAAeC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iRAWzBC,GAAYJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAYM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qFAMxBI,GAAQP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAaS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0NAYrBO,GAAQV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAoBY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wKAU5BU,EAAQb,EAAAA,EAAOc,MAAKC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,mGAOpBa,EAAehB,EAAAA,EAAOiB,OAAMC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,+N,iCCzCzC,MAAMgB,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,qBACpDC,SAAUJ,EAAAA,KAAaK,IAAI,EAAG,yBAAyBC,IAAI,GAAI,wBAAwBH,SAAS,0BAGrFI,EAAYA,KAEvB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,kBACdC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,aAAYC,EAAAA,GAAO,CAClCC,UAAWC,UACPN,GAASO,EAAAA,EAAAA,OACTC,QAAQC,IAAI,mCAAoCC,SAC1CZ,EAAYa,kBAAkB,QACpCH,QAAQC,IAAI,2BACZb,EAAS,SAAS,IAGxBY,QAAQC,IAAI,sBAYZ,OACEG,EAAAA,EAAAA,KAAC7C,EAAY,CAAA8C,UACXD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CAAEzB,MAAO,GAAIE,SAAU,IACtCwB,SAbaV,MAAOW,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAC7CV,QAAQC,IAAI,uCACZT,GAASoB,EAAAA,EAAAA,KAAc,UACjBlB,EAASmB,YAAYJ,GAC3BE,GAAW,EAUPG,iBAAkBnC,EAAO0B,UAEzBU,EAAAA,EAAAA,MAACnD,EAAS,CAACoD,aAAa,MAAKX,SAAA,EAC3BD,EAAAA,EAAAA,KAAC/B,EAAK,CAAC4C,QAAQ,QAAOZ,SAAC,WACvBD,EAAAA,EAAAA,KAACrC,EAAK,CACJmD,KAAK,QACLC,KAAK,QACLC,YAAY,2BACZrC,UAAQ,KAEVqB,EAAAA,EAAAA,KAAClC,EAAK,CAACiD,KAAK,QAAQE,UAAU,SAE9BjB,EAAAA,EAAAA,KAAC/B,EAAK,CAAC4C,QAAQ,WAAUZ,SAAC,cAC1BD,EAAAA,EAAAA,KAACrC,EAAK,CACJmD,KAAK,WACLC,KAAK,WACLC,YAAY,8BACZrC,UAAQ,KAEVqB,EAAAA,EAAAA,KAAClC,EAAK,CAACiD,KAAK,WAAWE,UAAU,SACjCjB,EAAAA,EAAAA,KAAC5B,EAAY,CAAC0C,KAAK,SAAQb,SAAC,iBAGnB,EClEJ,SAASiB,IACtB,OACEP,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACED,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAAAlB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,aAETD,EAAAA,EAAAA,KAACjB,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\n\nexport const LoginWrapper = styled.div`\nmargin-top: 35px;\nmargin-left: auto;\nmargin-right: auto;\nbackground: rgb(8,8,17);\nbackground: linear-gradient(90deg, rgba(8,8,17,1) 0%, rgba(4,8,3,1) 0%, rgba(39,107,39,1) 28%, rgba(29,29,31,1) 100%);\nwidth: 475px;\nheight: 500px;\nborder: 1px solid black;\n`;\n\nexport const FormWrapp = styled(Form)`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`;\n\nexport const Input = styled(Field)`\n    font-size: 16px;\n    width: 300px;\n    height: 30px;\n    margin-bottom: 15px;\n    padding: 5px;\n    border-radius: 5px;\n    outline-color: #34c734;\n    border-color: black;\n    font-weight: 700;\n`;\n\nexport const Error = styled(ErrorMessage)`\n    display: flex;\n    width: 300px;\n    text-align: center;\n    color: red;\n    margin-bottom: 15px;\n    font-weight: 500;\n    font-size: 16px;      \n`;\n\nexport const Label = styled.label`\n    font-size: 24px;\n    font-weight: 500;\n    margin-bottom: 5px;\n    color: white;\n`;\n\nexport const SubmitButton = styled.button`\n    width: 150px;\n    height: 40px;\n    background-color:  #34c734;\n    border: none;\n    border-radius: 5px;\n    font-size: 16px;\n    font-weight: 700;\n    cursor: pointer;\n    outline-color: black;\n    `;","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { FormWrapp, Input, Error, Label, SubmitButton, LoginWrapper } from './LoginForm.styled';\nimport { logIn, setRefreshing } from '../../redux/auth/operations';\nimport { logInSuccess } from '../../redux/auth/authSlice';\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup.string().min(4, 'Password is too short').max(12, 'Password is too long').required('Password is required'),\n});\n\nexport const LoginForm = () => {\n\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n\n  const mutation = useMutation(logIn, {\n    onSuccess: async (data) => {\n        dispatch(logInSuccess());\n        console.log('LoginForm.jsx - Login successful', data);\n        await queryClient.invalidateQueries('user');\n        console.log('Navigating to /games...');\n        navigate('/games'); \n    },\n  });\n  console.log('Component rendered');\n\n\nconst handleSubmit = async (values, { resetForm }) => {\n    console.log('LoginForm.jsx - setRefreshing(true)');\n    dispatch(setRefreshing(true));\n    await mutation.mutateAsync(values);\n    resetForm();\n  };\n\n\n\n  return (\n    <LoginWrapper>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormWrapp autoComplete='off'>\n          <Label htmlFor='email'>Email</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder='Please, enter your Email'\n            required\n          />\n          <Error name=\"email\" component='div' />\n\n          <Label htmlFor='password'>Password</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder='Please, enter your Password'\n            required\n          />\n          <Error name=\"password\" component='div' />\n          <SubmitButton type='submit'>Log in</SubmitButton>\n        </FormWrapp>\n      </Formik>\n    </LoginWrapper>\n  );\n};\n\n\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from '../components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}"],"names":["LoginWrapper","styled","div","_templateObject","_taggedTemplateLiteral","FormWrapp","Form","_templateObject2","Input","Field","_templateObject3","Error","ErrorMessage","_templateObject4","Label","label","_templateObject5","SubmitButton","button","_templateObject6","schema","yup","shape","email","required","password","min","max","LoginForm","navigate","useNavigate","queryClient","useQueryClient","dispatch","useDispatch","mutation","useMutation","logIn","onSuccess","async","logInSuccess","console","log","data","invalidateQueries","_jsx","children","Formik","initialValues","onSubmit","values","_ref","resetForm","setRefreshing","mutateAsync","validationSchema","_jsxs","autoComplete","htmlFor","type","name","placeholder","component","Login","Helmet"],"sourceRoot":""}