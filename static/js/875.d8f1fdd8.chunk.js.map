{"version":3,"file":"static/js/875.d8f1fdd8.chunk.js","mappings":"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","sources":["pages/Games/Games.styled.jsx","pages/Games/Games.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const GameWrapper = styled.div`\n  border: 1px solid #ccc;\n  padding: 16px;\n  margin-bottom: 16px;\n\n`;\n\nexport const GameTitle = styled.h3`\n  font-size: 20px;\n  margin-bottom: 8px;\n`;\n\nexport const GameDescription = styled.p`\n  font-size: 16px;\n  margin-bottom: 8px;\n`;\n\nexport const GameImage = styled.img`\n  max-width: 100%;\n  height: auto;\n  margin-bottom: 8px;\n`;\n\nexport const GenreInfo = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const GamePageButton = styled.button`\n  font-size: 16px;\n  background-color: #4caf50;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n  cursor: pointer;\n\n \n`;\n\nexport const GamesPageWrapper = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n\n\n`;\n\nexport const GamesPageTitle = styled.h2`\n  font-size: 24px;\n  margin-bottom: 16px;\n`;\n\nexport const GenreSelectLabel = styled.label`\n  font-size: 16px;\n  margin-right: 8px;\n`;\n\nexport const GenreSelec = styled.select`\n  font-size: 16px;\n  padding: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const ShowMoreButtont = styled(GamePageButton)`\n  background-color: #2196f3;\n\n  &:hover {\n    background-color: #0b7dda;\n  }\n`;","/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GameWrapper, GameTitle, GameDescription, GenreSelec, ShowMoreButtont, GameImage, GenreInfo, GamesPageWrapper, GamesPageTitle, GenreSelectLabel } from './Games.styled';\n\nconst GameComponent = ({ game }) => {\n  return (\n    <GameWrapper key={game._id}>\n      <GameTitle>{game.commonGameName}</GameTitle>\n      <GameDescription>{game.gameDescription}</GameDescription>\n      <GameImage src={game.gameImage} alt={game.commonGameName} />\n      <GenreInfo>Genre: {game.genre}</GenreInfo>\n      <GenreInfo>{game.inTop ? 'In Top' : 'Not in Top'}</GenreInfo>\n    </GameWrapper>\n  );\n};\n\nconst GamesPage = () => {\n  const [genre, setGenre] = useState(''); \n  const [games, setGames] = useState([]); \n  const [page, setPage] = useState(1); \n  const [gamesToShow, setGamesToShow] = useState(9); \n  const [totalGames, setTotalGames] = useState(0);\n\n  useEffect(() => {\n    const fetchMoreGames = async () => {\n      try {\n        const response = await axios.post('https://api.miraplay.cloud/games/by_page', {\n          page,\n          isFreshGamesFirst: true,\n          genre,\n          gamesToShow,\n        });\n\n        const { games: newGames, gamesListLength } = response.data;\n\n        setGames((prevGames) => [...prevGames, ...newGames]);\n        setTotalGames(gamesListLength);\nif(games.length >= gamesListLength) {\n    setGamesToShow(0);\n}\n      } \n      catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchMoreGames();\n  }, [page, genre, gamesToShow, games.length]);\n\n  const handleGenreChange = (newGenre) => {\n    setGenre(newGenre);\n    setGames([]);\n    setPage(1);\n  };\n\n  const handleShowMore = () => {\n    setPage((prevPage) => prevPage + 1);\n    fetchMoreGames();\n  };\n\n  return (\n    <GamesPageWrapper>\n      <GamesPageTitle>Games Page</GamesPageTitle>\n      <GenreSelectLabel htmlFor=\"genre\">Select Genre:</GenreSelectLabel>\n      <GenreSelec id=\"genre\" onChange={(e) => handleGenreChange(e.target.value)} value={genre}>\n        {[\"\", \"ALL\", \"FREE\", \"MOBA\", \"SHOOTERS\", \"LAUNCHERS\", \"MMORPG\", \"STRATEGY\", \"FIGHTING\", \"RACING\", \"SURVIVAL\", \"ONLINE\"].map((genreOption) => (\n          <option key={genreOption} value={genreOption}>{genreOption}</option>\n        ))}\n      </GenreSelec>\n\n      <div>\n        {games.map((game) => (\n          <GameComponent key={game._id} game={game} />\n        ))}\n      </div>\n\n      {gamesToShow > 0 && totalGames > gamesToShow && (\n        <ShowMoreButtont onClick={handleShowMore}>Show More</ShowMoreButtont>\n      )}\n    </GamesPageWrapper>\n  );\n};\n\nexport default GamesPage;\n"],"names":["GameWrapper","styled","div","_templateObject","_taggedTemplateLiteral","GameTitle","h3","_templateObject2","GameDescription","p","_templateObject3","GameImage","img","_templateObject4","GenreInfo","_templateObject5","GamePageButton","button","_templateObject6","GamesPageWrapper","_templateObject7","GamesPageTitle","h2","_templateObject8","GenreSelectLabel","label","_templateObject9","GenreSelec","select","_templateObject10","ShowMoreButtont","_templateObject11","GameComponent","_ref","game","_jsxs","children","_jsx","commonGameName","gameDescription","src","gameImage","alt","genre","inTop","_id","GamesPage","setGenre","useState","games","setGames","page","setPage","gamesToShow","setGamesToShow","totalGames","setTotalGames","useEffect","async","response","axios","post","isFreshGamesFirst","newGames","gamesListLength","data","prevGames","length","error","console","fetchMoreGames","htmlFor","id","onChange","e","handleGenreChange","newGenre","target","value","map","genreOption","onClick","handleShowMore","prevPage"],"sourceRoot":""}